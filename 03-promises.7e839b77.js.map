{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAOtC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACbC,YAAW,KACvBN,EACDI,EAAQ,C,SAACN,E,MAAUC,IAElBM,EAAO,C,SAACP,E,MAAUC,GAAO,GACxBA,EAAM,G,CAZbL,EAAOa,iBAAiB,UAiBxB,SAAqBC,GACnBA,EAAMC,eACN,IAAIC,EAAShB,EAAOK,MAAMY,MAE1B,IAAK,IAAIC,EAAI,EAAGA,GAAKlB,EAAOmB,OAAOF,MAAOC,GAAK,EAC7Cf,EAAce,EAAGF,GACdI,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAuB,OAAOC,QAAQ,uBAAqBlB,QAAiBC,MAAU,IAEhEkB,OAAM,EAACnB,SAAEA,EAAQC,MAAEA,MAClBP,EAAAuB,OAAOG,QAAQ,sBAAoBpB,QAAeC,MAAU,IAEhEW,GAAUhB,EAAOyB,KAAKR,K","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector(\".form\");\n\n\nformEl.addEventListener(\"submit\", submitForm);\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3; \n  return new Promise((resolve, reject) => {\n  const timerid = setTimeout(() =>{\n  if (shouldResolve) {\n     resolve({position, delay});}\n     else{\n      reject({position, delay}); }\n    }, delay);\n\n});}\n\n\nfunction submitForm (event){\n  event.preventDefault;\n  let delay  = formEl.delay.value\n \n  for (let i = 1; i <= formEl.amount.value; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay +=  formEl.step.value;\n  }\n}\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","value","i","amount","then","Notify","success","catch","failure","step"],"version":3,"file":"03-promises.7e839b77.js.map"}